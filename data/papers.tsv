id	year	authors	title	publication	group	doi	citations	impact	learning_categories	models_implemented	key_words	abstract
1	2009	Qiang Fu;Jian-Guang Lou;Yi Wang;Jiang Li	Execution Anomaly Detection in Distributed Systems through Unstructured Log Analysis	9th IEEE International Conference on Data Mining	Experimental	10.1109/ICDM.2009.60	555	42.69	unsupervised	clustering;finite state automaton	log analysis;distributed system;problem diagnosis;FSA	Detection of execution anomalies is very important for the maintenance, development, and performance refinement of large scale distributed systems. Execution anomalies include both work flow errors and low performance problems. People often use system logs produced by distributed systems for troubleshooting and problem diagnosis. However, manually inspecting system logs to detect anomalies is unfeasible due to the increasing scale and complexity of distributed systems. Therefore, there is a great demand for automatic anomaly detection techniques based on log analysis. In this paper, we propose an unstructured log analysis technique for anomaly detection. In the technique, we propose a novel algorithm to convert free form text messages in log files to log keys without heavily relying on application specific knowledge. The log keys correspond to the log-print statements in the source code which can provide cues of system execution behavior. After converting log messages to log keys, we learn a Finite State Automaton (FSA) from training log sequences to present the normal work flow for each system component. At the same time, a performance measurement model is learned to characterize the normal execution performance based on the log messages’ timing information. With these learned models, we can automatically detect anomalies in newly input log files. Experiments on Hadoop and SILK show that the technique can effectively detect running anomalies.
2	2016	Shilin He;Jieming Zhu;Pinjia He;Michael R. Lyu	Experience Report: System Log Analysis for Anomaly Detection	27th IEEE International Symposium On Software Reliability Engineering	Survey	10.1109/ISSRE.2016.21	359	59.83	NA	NA	NA	Logs have been an imperative resource to ensure the reliability and continuity of many software systems, especially large-scale distributed systems. They faithfully record runtime information to facilitate system troubleshooting and behavior understanding. Due to the large scale and complexity of modern software systems, the volume of logs has reached an unprecedented level. Consequently, for log-based anomaly detection, conventional manual inspection methods or even traditional machine learning-based methods become impractical, which serve as a catalyst for the rapid development of deep learning-based solutions. However, there is currently a lack of rigorous comparison among the representative log-based anomaly detectors that resort to neural networks. Moreover, the re-implementation process demands non-trivial efforts, and bias can be easily introduced. To better understand the characteristics of different anomaly detectors, in this paper, we provide a comprehensive review and evaluation of five popular neural networks used by six state-of-the-art methods. Particularly, four of the selected methods are unsupervised, and the remaining two are supervised. These methods are evaluated with two publicly available log datasets, which contain nearly 16 million log messages and 0.4 million anomaly instances in total. We believe our work can serve as a basis in this field and con
3	2016	Qingwei Lin;Hongyu Zhang;Jian-Guang Lou;Yu Zhang;Xuewei Chen	Log clustering based problem identification for online service systems	38th IEEE/ACM International Conference on Software Engineering Companion	Experimental	10.1145/2889160.2889232	259	43.17	unsupervised	clustering	logs;problem identification;log clustering;diagnosis;online service system	Logs play an important role in the maintenance of large-scale online service systems. When an online service fails, engineers need to examine recorded logs to gain insights into the failure and identify the potential problems. Traditionally, engineers perform simple keyword search (such as “error” and “exception”) of logs that may be associated with the failures. Such an approach is often time consuming and error prone. Through our collaboration with Microsoft service product teams, we propose LogCluster, an approach that clusters the logs to ease log-based problem identification. LogCluster also utilizes a knowledge base to check if the log sequences occurred before. Engineers only need to examine a small number of previously unseen, representative log sequences extracted from the clusters to identify a problem, thus significantly reducing the number of logs that should be examined, meanwhile improving the identification accuracy. Through experiments on two Hadoop-based applications and two large-scale Microsoft online service systems, we show that our approach is effective and outperforms the state-of-the-art work proposed by Shang et al. in ICSE 2013. We have successfully applied LogCluster to the maintenance of many actual Microsoft online service systems. In this paper, we also share our success stories and lessons learned.
4	2017	MIn Du;Feifei Li;Guineng Zheng;Vivek Srikumar	DeepLog: Anomaly Detection and Diagnosis from System Logs through Deep Learning	Proceedings of the 2017 ACM SIGSAC Conference on computer and communications security	Experimental	10.1145/3133956.3134015	803	160.6	supervised	long short-term memory	anomaly detection;deep learning;log data analysis	Anomaly detection is a critical step towards building a secure and trustworthy system. e primary purpose of a system log is to record system states and signicant events at various critical points to help debug system failures and perform root cause analysis. Such log data is universally available in nearly all computer systems. Log data is an important and valuable resource for understanding system status and performance issues; therefore, the various system logs are naturally excellent source of information for online monitoring and anomaly detection. We propose DeepLog, a deep neural network model utilizing Long Short-Term Memory (LSTM), to model a system log as a natural language sequence. is allows DeepLog to automatically learn log paerns from normal execution, and detect anomalies when log paerns deviate from the model trained from log data under normal execution. In addition, we demonstrate how to incrementally update the DeepLog model in an online fashion so that it can adapt to new log paerns over time. Furthermore, DeepLog constructs workows from the underlying system log so that once an anomaly is detected, users can diagnose the detected anomaly and perform root cause analysis effectively. Extensive experimental evaluations over large log data have shown that DeepLog has outperformed other existing log-based anomaly detection methods based on traditional data mining methodologies.
5	2017	Qiming Cao;Yinrong Qiao;Zhong Lyu	Machine learning to detect anomalies in web log analysis	3rd IEEE International Conference on Computer and Communications	Experimental	10.1109/CompComm.2017.8322600	38	7.6	supervised	decision tree classifier;hidden markov model	machine learning;anomaly detection;log files component	As the information technology develops rapidly, Web servers are easily to be attacked because of their high value. Therefore, Web security has aroused great concern in both academia and industry. Anomaly detection plays a significant role in the field of Web security, and log messages recording detailed system runtime information has become an important data analysis object accordingly. Traditional log anomaly detection relies on programmers to manually inspect by keyword search and regular expression match. Although the programmers can use intrusion detection system to reduce their workload, yet the log system data is huge, attack types are various, and hacking skills are improving, which make the traditional detection not efficient enough. To improve the traditional detection technology, many of anomaly detection mechanisms have been proposed in recent years, especially the machine learning method. In this paper, an anomaly detection system for web log files has been proposed, which adopts a two-level machine learning algorithm. The decision tree model classifies normal and anomalous data sets. The normal data set is manually checked for the establishment of multiple HMMs. The experimental data comes from the real industrial environment where log files have been collected, which contain many true intrusion messages. After comparing with three types of machine learning algorithms used in anomaly detection, the experimental results on this data set suggest that this system achieves highe
6	2018	Siyang Lu;Xiang Wei;Yandong Li;Liqiang Wang	Detecting Anomaly in Big Data System Logs Using Convolutional Neural Network	16th Intl Conf on Dependable, Autonomic and Secure Computing, 16th Intl Conf on Pervasive Intelligence and Computing, 4th Intl Conf on Big Data Intelligence and Computing and Cyber Science and Technology Congress	Experimental	10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.00037	71	17.75	supervised	convolutional neural network	cnn;big data;log analysis;anomaly detection	Nowadays, big data systems are being widely adopted by many domains for offering effective data solutions, such as manufacturing, healthcare, education, and media. Big data systems produce tons of unstructured logs that contain buried valuable information. However, it is a daunting task to manually unearth the information and detect system anomalies. A few automatic methods have been developed, where the cuttingedge machine learning technique is one of the most promising ways. In this paper, we propose a novel approach for anomaly detection from big data system logs by leveraging Convolutional Neural Networks (CNN). Different from other existing statistical methods or traditional rule-based machine learning approaches, our CNN-based model can automatically learn event relationships in system logs and detect anomaly with high accuracy. Our deep neural network consists of logkey2vec embeddings, three 1D convolutional layers, dropout layer, and max-pooling. According to our experiment, our CNN-based approach has better accuracy (reaches to 99%) compared to other approaches using Long Short term memory (LSTM) and Multilayer Perceptron (MLP) on detecting anomaly in Hadoop Distributed File System (HDFS) logs.
7	2018	Biplog Bebnath;Mohiuddin Solaimani;Muhammad Ali Gulzar;Nipun Arora;Cristian Lumezanu;Jianwu Xu;Bo Zong;Hui Zhang;Guofei Jiang;Latifur Khan	LogLens: A Real-time Log Analysis System	IEEE 38th International conference on Distributed Computing Systems	Experimental	10.1109/ICDCS.2018.00105	61	15.25	unsupervised	finite state automaton	log analysis;log parsing;anomaly detection;unsupervised learning;big data processing;spark;log sequence violation;distributed computing;real time system;event driven compution	Administrators of most user-facing systems depend on periodic log data to get an idea of the health and status of production applications. Logs report information, which is crucial to diagnose the root cause of complex problems. In this paper, we present a real-time log analysis system called LogLens that automates the process of anomaly detection from logs with no (or minimal) target system knowledge and user specification. In LogLens, we employ unsupervised machine learning based techniques to discover patterns in application logs, and then leverage these patterns along with the real-time log parsing for designing advanced log analytics applications. Compared to the existing systems which are primarily limited to log indexing and search capabilities, LogLens presents an extensible system for supporting both stateless and stateful log analysis applications. Currently, LogLens is running at the core of a commercial log analysis solution handling millions of logs generated from the large-scale industrial environments and reported up to 12096x man-hours reduction in troubleshooting operational problems compared to the manual approach.
8	2018	Andy Brown;Aaron Tuor;Brian Hutchinson;Nicole Nichols	Recurrent Neural Network Attention Mechanisms for Interpretable System Log Anomaly Detection	Proceedings of the First Workshop on Machine Learning for Computing Systems	Experimental	10.1145/3217871.3217872	146	36.5	suprevised	long short-term memory	anomaly detection;attention;recurrent neural networks;interpretable machine learning;online training;system log analysis	Deep learning has recently demonstrated state-of-the art performance on key tasks related to the maintenance of computer systems, such as intrusion detection, denial of service attack detection, hardware and software system failures, and malware detection. In these contexts, model interpretability is vital for administrator and analyst to trust and act on the automated analysis of machine learning models. Deep learning methods have been criticized as black box oracles which allow limited insight into decision factors. In this work we seek to bridge the gap between the impressive performance of deep learning models and the need for interpretable model introspection. To this end we present recurrent neural network (RNN) language models augmented with attention for anomaly detection in system logs. Our methods are generally applicable to any computer system and logging source. By incorporating attention variants into our RNN language models we create opportunities for model introspection and analysis without sacrificing state-of-the art performance. We demonstrate model performance and illustrate model interpretability on an intrusion detection task using the Los Alamos National Laboratory (LANL) cyber security dataset, reporting upward of 0.99 area under the receiver operator characteristic curve despite being trained only on a single day’s worth of data.
9	2018	Mengying Wang;Lele Xu;Lili Guo	Anomaly Detection of System Logs Based on Natural Language Processing and Deep Learning	4th International Conference on Frontiers of Signal Processing	Experimental	10.1109/ICFSP.2018.8552075	22	NA	unsupervised;supervised	word2vec;term frequency-inverse document frequency;long short-term memory	anomaly detection;word2vec;tf-idf;lstm;log analysis;natural language processing	System logs record the execution trajectory of the system and exist in all components of the system. Nowadays, the systems are deployed in a distributed environment and they generate logs which contain complex format and rich semantic information. Simple statistical analysis methods cannot fully capture log information for effective abnormal detection of software systems. In this paper, we propose to analyze the logs by combining feature extraction methods from natural language processing and anomaly detection methods from deep learning. Two feature extraction algorithms, Word2vec and Term Frequency-Inverse Document Frequency (TF-IDF), are respectively adopted and compared here to obtain the log information, and then one deep learning method named Long Short-Term Memory (LSTM) is applied for the anomaly detection. To validate the effectiveness of the proposed method, we compare LSTM with other machine learning algorithms, including Gradient Boosting Decision Tree (GBDT) and Naïve Bayes, the results show that LSTM can perform the best for anomaly detection of system logs with both of the two feature extraction methods, indicating that LSTM can capture contextual semantic information effectively in log anomaly detection and will be a promising tool for log analysis.
10	2019	Shridhar Allagi;Rashmi Rachh	Analysis of Network log data using Machine Learning	5th International conference for Convergence in Technology (I2CT)	Experimental	10.1109/i2ct45611.2019.9033737	11	3.67	supervised	k-means;self organizing feature map	machine learning;supervised learning;k-means, sofm	The proliferation of web base usage has also resulted in an escalation in unauthorized network access. In this scenario, it is imperative to periodically analyze log records of the network so that malicious users can be identified. This process can be automated using machine learning techniques. In this paper, analysis of log records of a network is carried out using supervised machine learning techniques. K-means and Self organizing feature map (SOFM) algorithms have been used with the data set obtained from the UCI machine learning repository. An accuracy of 97.2% has been archived.
11	2019	Guofu Li;Pengjia Zhu;Ning Cao;Mei Wu;Zhiyi Chen;Guangsheng Cao;Hongjun Li;Chenjing Gong	Improving the system log analysis with language model and semi-supervised classifier	Multimedia Tools and Applications	Experimental	10.1007/s11042-018-7020-3	5	1.67	semi-supervised	natural language processing;latent dirichlet allocation;multilayer perceptron	log analysis;language model;machine learning	Mining the vast amount of server-side logging data is an essential step to boost the business intelligence, as well as to facilitate the system maintenance for multimedia or IoT oriented services. Considering the vast volume of the data repository, designers of these logging-data analysis systems need to carefully balance the speed of the processing and the accuracy of the message classification. Conventional keyword-based log data monitoring and classification is sufficiently fast, but does not scale well in complex systems, especially when the target system is contributed by a large group of developers, each may differ in the way to encode the logging messages, and often carrying misleading labels. Conversely, many of the sophisticated approaches may suffer from their considerable time consumption, such that delayed processing jobs may begin to accumulate, and can hardly support the timely decision requirements. Meanwhile, we also suggest that the design of a large scale online log analysis should follow a principle that requires the least prior knowledge, in which unsupervised or semi-supervised solution is preferred. In this paper, we propose a two-stage machine learning based method, in which the system logs are regarded as the output of a quasi-natural language, pre-filtered by a perplexity score threshold, and then undergo a fine-grained classification procedure. Empirical studies on our web-services show that ou
12	2019	Xu Zhang;Yong Xu;Hongyu Zhang;Yingnong Dang;Chunyu Xie;Xinsheng Yang;Junjie Chen;Xiaoting He;Randolph Yao;Jiang-Guang Lou;Murali Chintalapati;Furao Shen;Dongmei Zhang	Robust log-based anomaly detection on unstable log data	ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering	Experimental	10.1145/3338906.3338931	173	57.67	supervised	long short-term memory	anomaly detection;log analysis;deep learning;log instability;data quality	Logs are widely used by large and complex software-intensive systems for troubleshooting. There have been a lot of studies on log-based anomaly detection. To detect the anomalies, the existing methods mainly construct a detection model using log event data extracted from historical logs. However, we find that the existing methods do not work well in practice. These methods have the close-world assumption, which assumes that the log data is stable over time and the set of distinct log events is known. However, our empirical study shows that in practice, log data often contains previously unseen log events or log sequences. The instability of log data comes from two sources: 1) the evolution of logging statements, and 2) the processing noise in log data. In this paper, we propose a new log-based anomaly detection approach, called LoдRobust. LogRobust extracts semantic information of log events and represents them as semantic vectors. It then detects anomalies by utilizing an attention-based Bi-LSTM model, which has the ability to capture the contextual information in the log sequences and automatically learn the importance of different log events. In this way, LogRobust is able to identify and handle unstable log events and sequences. We have evaluated LogRobust using logs collected from the Hadoop system and an actual online service system of Microsoft. The experimental results show that the proposed approach can well address the problem of log instability and achieve accurate and robust results on real-world, ever-changing log data.
13	2020	Rakesh Bahadur Yadav;P Santosh Kumar;Sunita Vikrant Dhavale	A Survey on Log Anomaly Detection using Deep Learning	8th International Conference on Reliability, Infocom Technologies and Optimization (Trends and Future Directions) (ICRITO)	Survey	10.1109/ICRITO48877.2020.9197818	21	10.5	NA	NA	log anomaly;deep learning;lstm;cnn;autoencoder;log parsing	Logs generated from the security systems, network devices, servers, and various software applications are one of the ways to record the operational happening of the equipment or software. These logs are assets for extracting meaningful information related to system behavior. Increasing usage of computer devices and the evolution of software systems can be considered as one of triggering acts for the concentration on the analysis of logs. Also, considering the massive volume of unstructured data, it raises the requirement for automatic analysis of these logs. The log analysis is helpful for understanding system behavior, malfunctioning detection, security scanning, and failure prediction. Machine learning(ML) and Deep Learning (DL) methods have been proved potent tools for data classification problems and have been applied to various fields of research. The purpose of this survey is to review recent research on log anomaly detection using Deep Neural Networks. Survey also presents the brief of log parsing approaches, types of datasets used for log analy
14	2020	Lukas Layer;Daniel Robert Abercrombie;Hamed Bakhshiansohi;Jennifer Adelman-McCarthy;Sharad Agarwal;Andres Vargas Hernandez;Weinan Si;Jean-Roch Vlimant	Automatic log analysis with NLP for the CMS workflow handling	EPJ Web of Conferences	Experimental	10.1051/epjconf/202024503006	3	1.5	supervised;unsupervised	feed-forward neural network;recurrent neural network;word2vec	NA	The central Monte-Carlo production of the CMS experiment utilizes the WLCG infrastructure and manages daily thousands of tasks, each up to thousands of jobs. The distributed computing system is bound to sustain a certain rate of failures of various types, which are currently handled by computing operators a posteriori. Within the context of computing operations, and operation intelligence, we propose a Machine Learning technique to learn from the operators with a view to reduce the operational workload and delays. This work is in continuation of CMS work on operation intelligence to try and reach accurate predictions with Machine Learning. We present an approach to consider the log files of the workflows as regular text to leverage modern techniques from Natural Language Processing (NLP). In general, log files contain a substantial amount of text that is not human language. Therefore, different log parsing approaches are studied in order to map the log files’ words to high dimensional vectors. These vectors are then exploited as feature space to train a model that predicts the action that the operator has to take. This approach has the advantage that the information of the log files is extracted automatically and the format of the logs can be arbitrary. In this work the performance of the log file analysis with NLP is presented and compared to previous approaches.
15	2020	Ju Peng Poh;Jun Yu Charles Lee;Kah Xuan Tan;Eric Tan	Physical Access Log Analysis: An Unsupervised Clustering Approach for Anomaly Detection	Proceedings of 2020 International Conference on Data Science and Information Technology (DSIT' 20)	Experimental	10.1145/3414274.3414285	4	2	unsupervised	two step clustering	anomaly detection;phyisical access;clustering;machine learning;data mining;data modeling	There are ample of research work on the detection of anomalies in the area of cyber security. However, only a few of them focus on physical access security. Physical access control, including employee and guest access and management system, supervised doors or location, surveillance camera, are critical checkpoints of a premise in terms of security monitoring. Breaches of these checkpoints can cause serious damage, where an insider or an outsider (e.g. through social engineering) may gain access to sensitive areas of the premise and may further result in data leakage or disruptions of services. In this paper, we characterise users based on their physical movement behavior and job profile in order to identify users with anomalous physical access behaviour using an unsupervised machine learning algorithm known as the Two Step clustering method. We further evaluate the type of risk posed by these users by comparing the user’s behaviour with its peer group and observing a set of rule-based metrics. The framework is then being compared with other recent approaches for anomaly detection of physical access logs. Lastly, this framework is deployed in a real-world environment and successfully assisted in the detection of anomalous physical access behaviour.
16	2020	Amir Farzad;T. Aaron Gulliver	Unsupervised log message anomaly detection	ICT Express	Experimental	10.1016/j.icte.2020.06.003	34	17	unsupervised	isolation forest;autoencoder networks	anomaly detection;classification;deep learning;log messages;unsupervised learning	Log messages are now broadly used in cloud and software systems. They are important for classification and anomaly detection as millions of logs are generated each day. In this paper, an unsupervised model for log message anomaly detection is proposed which employs Isolation Forest and two deep Autoencoder networks. The Autoencoder networks are used for training and feature extraction, and then for anomaly detection, while Isolation Forest is used for positive sample prediction. The proposed model is evaluated using the BGL, Openstack and Thunderbird log message data sets. The results obtained show that the number of negative samples predicted to be positive is low, especially with Isolation Forest and one Autoencoder. Further, the results are better than with other well-known models.
17	2021	Zhijun Zhao;Chen Xu;Bo Li	A LSTM-Based Anomaly Detection Model for Log Analysis	Journal of Signal Processing Systems	Experimental	10.1007/s11265-021-01644-4	5	5	unsupervised	long short-term memory	anomaly detection;log analysis	Security devices produce huge number of logs which are far beyond the processing speed of human beings. This paper introduces an unsupervised approach to detecting anomalous behavior in large scale security logs. We propose a novel feature extracting mechanism and could precisely characterize the features of malicious behaviors. We design a LSTM-based anomaly detection approach and could successfully identify attacks on two widely-used datasets. Our approach outperforms three popular anomaly detection algorithms, one-class SVM, GMM and Principal Components Analysis, in terms of accuracy and efficiency.
18	2021	Shilin He;Pinjia He;Zhuangbin Chen;Tianyi Yang;Yuxing Su;Michael R. Lyu	A Survey on Automated Log Analysis for Reliability engineering	ACM Computing Surveys	Survey	10.1145/3460345	34	34	NA	NA	NA	NA
19	2021	Xiaoyu Duan;Shi Ying;Wanli Yuan;Hailong Cheng;Xiang Yin	QLLog: A log anomaly detection method based on Q-learning algorithm	Information Processing & Management	Experimental	10.1016/j.ipm.2021.102540	7	7	reinforcement	q-learning	log anomaly detection;q-learning;reinforcement learning;data analysis	Most of the existing log anomaly detection methods suffer from scalability and numerous false positives. Besides, they cannot rank the severity level of abnormal events. This paper proposes a log anomaly detection based on Q-learning, namely QLLog, which can detect multiple types of system anomalies and rank the severity level of abnormal events. We first build a mathematical model of log anomaly detection, proving that log anomaly detection is a sequential decision problem. Second, we use the Q-learning algorithm to build the core of the anomaly detection model. This allows QLLog to automatically learn directed acyclic graph log patterns from normal execution and adjust the training model according to the reward value. Then, QLLog combines the advantages of the Q-learning algorithm and the specially designed rules to detect anomalies when log patterns deviate from the model trained from log data under normal execution. Besides, we provide a feedback mechanism and build an abnormal level table. Therefore, QLLog can adapt to new log states and log patterns. Experiments on real datasets show that the method can quickly and effectively detect system anomalies. Compared with the state of the art, QLLog can detect numerous real problems with high accuracy 95%, and its scalability outperforms other existing log-based anomaly detection methods.
20	2021	Lin Yang;Junjie Chen;Zan Wang;Weijing Wang;Jiajun Jiang;Xuayuan Dong;Wenbing Zhang	Semi-Supervised Log-Based Anomaly Detection via Probabilistic Label Estimation	IEEE/ACM 43rd International Conference on Software Engineering	Experimental	10.1109/ICSE43902.2021.00130	24	24	semi-supervised	probabilistic label estimation;gated recurrent unit	log analysis;anomaly detection;deep learning;probabilistic estimation;label	With the growth of software systems, logs have become an important data to aid system maintenance. Log-based anomaly detection is one of the most important methods for such purpose, which aims to automatically detect system anomalies via log analysis. However, existing log-based anomaly detection approaches still suffer from practical issues due to either depending on a large amount of manually labeled training data (supervised approaches) or unsatisfactory performance without learning the knowledge on historical anomalies (unsupervised and semi-supervised approaches). In this paper, we propose a novel practical log-based anomaly detection approach, PLELog, which is semi-supervised to get rid of time-consuming manual labeling and incorporates the knowledge on historical anomalies via probabilistic label estimation to bring supervised approaches’ superiority into play. In addition, PLELog is able to stay immune to unstable log data via semantic embedding and detect anomalies efficiently and effectively by designing an attention-based GRU neural network. We evaluated PLELog on two most widely-used public datasets, and the results demonstrate the effectiveness of PLELog, significantly outperforming the compared approaches with an average of 181.6% improvement in terms of Fl-score. In particular, PLELog has been applied to two real-world systems from our university and a large corporation, further demonstrating its practicability.
